Grammar

    0 $accept: program $end

    1 program: decls stmt

    2 type: BOOL_TYPE
    3     | INT_TYPE

    4 decls: decls decl
    5      | %empty

    6 decl: type ID ';'

    7 stmts: stmts stmt
    8      | stmt

    9 stmt: '{' stmts '}'
   10     | ID '=' expr ';'
   11     | IF '(' expr ')' stmt
   12     | IF '(' expr ')' stmt ELSE stmt
   13     | WHILE '(' expr ')' stmt
   14     | INCREMENT expr ';'
   15     | expr INCREMENT ';'
   16     | DECREMENT expr ';'
   17     | expr DECREMENT ';'
   18     | PRINT expr ';'

   19 expr: VAL
   20     | FALSE
   21     | TRUE
   22     | ID
   23     | '(' expr ')'
   24     | expr '+' expr
   25     | expr '-' expr
   26     | expr '*' expr
   27     | expr '/' expr
   28     | expr EQ expr
   29     | expr NE expr
   30     | expr GE expr
   31     | expr LE expr
   32     | expr '>' expr
   33     | expr '<' expr
   34     | expr AND expr
   35     | expr OR expr
   36     | expr XOR expr


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 11 12 13 23
    ')' (41) 11 12 13 23
    '*' (42) 26
    '+' (43) 24
    '-' (45) 25
    '/' (47) 27
    ';' (59) 6 10 14 15 16 17 18
    '<' (60) 33
    '=' (61) 10
    '>' (62) 32
    '{' (123) 9
    '}' (125) 9
    error (256)
    GE (258) 30
    LE (259) 31
    EQ (260) 28
    NE (261) 29
    FALSE (262) 20
    TRUE (263) 21
    INCREMENT (264) 14 15
    DECREMENT (265) 16 17
    IF (266) 11 12
    ELSE (267) 12
    WHILE (268) 13
    PRINT (269) 18
    BOOL_TYPE (270) 2
    INT_TYPE (271) 3
    AND (272) 34
    OR (273) 35
    XOR (274) 36
    ID <id> (275) 6 10 22
    VAL <value> (276) 19
    IF_ALONE (277)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program (36)
        on left: 1
        on right: 0
    type <type> (37)
        on left: 2 3
        on right: 6
    decls (38)
        on left: 4 5
        on right: 1 4
    decl (39)
        on left: 6
        on right: 4
    stmts <stmt> (40)
        on left: 7 8
        on right: 7 9
    stmt <stmt> (41)
        on left: 9 10 11 12 13 14 15 16 17 18
        on right: 1 7 8 11 12 13
    expr <expr> (42)
        on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
        on right: 10 11 12 13 14 15 16 17 18 23 24 25 26 27 28 29 30 31 32 33 34 35 36


State 0

    0 $accept: . program $end

    $default  reduce using rule 5 (decls)

    program  go to state 1
    decls    go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: decls . stmt
    4 decls: decls . decl

    FALSE      shift, and go to state 4
    TRUE       shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    PRINT      shift, and go to state 10
    BOOL_TYPE  shift, and go to state 11
    INT_TYPE   shift, and go to state 12
    ID         shift, and go to state 13
    VAL        shift, and go to state 14
    '{'        shift, and go to state 15
    '('        shift, and go to state 16

    type  go to state 17
    decl  go to state 18
    stmt  go to state 19
    expr  go to state 20


State 3

    0 $accept: program $end .

    $default  accept


State 4

   20 expr: FALSE .

    $default  reduce using rule 20 (expr)


State 5

   21 expr: TRUE .

    $default  reduce using rule 21 (expr)


State 6

   14 stmt: INCREMENT . expr ';'

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 22


State 7

   16 stmt: DECREMENT . expr ';'

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 23


State 8

   11 stmt: IF . '(' expr ')' stmt
   12     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 24


State 9

   13 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 25


State 10

   18 stmt: PRINT . expr ';'

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 26


State 11

    2 type: BOOL_TYPE .

    $default  reduce using rule 2 (type)


State 12

    3 type: INT_TYPE .

    $default  reduce using rule 3 (type)


State 13

   10 stmt: ID . '=' expr ';'
   22 expr: ID .

    '='  shift, and go to state 27

    $default  reduce using rule 22 (expr)


State 14

   19 expr: VAL .

    $default  reduce using rule 19 (expr)


State 15

    9 stmt: '{' . stmts '}'

    FALSE      shift, and go to state 4
    TRUE       shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    PRINT      shift, and go to state 10
    ID         shift, and go to state 13
    VAL        shift, and go to state 14
    '{'        shift, and go to state 15
    '('        shift, and go to state 16

    stmts  go to state 28
    stmt   go to state 29
    expr   go to state 20


State 16

   23 expr: '(' . expr ')'

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 30


State 17

    6 decl: type . ID ';'

    ID  shift, and go to state 31


State 18

    4 decls: decls decl .

    $default  reduce using rule 4 (decls)


State 19

    1 program: decls stmt .

    $default  reduce using rule 1 (program)


State 20

   15 stmt: expr . INCREMENT ';'
   17     | expr . DECREMENT ';'
   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    GE         shift, and go to state 32
    LE         shift, and go to state 33
    EQ         shift, and go to state 34
    NE         shift, and go to state 35
    INCREMENT  shift, and go to state 36
    DECREMENT  shift, and go to state 37
    AND        shift, and go to state 38
    OR         shift, and go to state 39
    XOR        shift, and go to state 40
    '>'        shift, and go to state 41
    '<'        shift, and go to state 42
    '+'        shift, and go to state 43
    '-'        shift, and go to state 44
    '*'        shift, and go to state 45
    '/'        shift, and go to state 46


State 21

   22 expr: ID .

    $default  reduce using rule 22 (expr)


State 22

   14 stmt: INCREMENT expr . ';'
   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    AND  shift, and go to state 38
    OR   shift, and go to state 39
    XOR  shift, and go to state 40
    '>'  shift, and go to state 41
    '<'  shift, and go to state 42
    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46
    ';'  shift, and go to state 47


State 23

   16 stmt: DECREMENT expr . ';'
   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    AND  shift, and go to state 38
    OR   shift, and go to state 39
    XOR  shift, and go to state 40
    '>'  shift, and go to state 41
    '<'  shift, and go to state 42
    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46
    ';'  shift, and go to state 48


State 24

   11 stmt: IF '(' . expr ')' stmt
   12     | IF '(' . expr ')' stmt ELSE stmt

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 49


State 25

   13 stmt: WHILE '(' . expr ')' stmt

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 50


State 26

   18 stmt: PRINT expr . ';'
   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    AND  shift, and go to state 38
    OR   shift, and go to state 39
    XOR  shift, and go to state 40
    '>'  shift, and go to state 41
    '<'  shift, and go to state 42
    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46
    ';'  shift, and go to state 51


State 27

   10 stmt: ID '=' . expr ';'

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 52


State 28

    7 stmts: stmts . stmt
    9 stmt: '{' stmts . '}'

    FALSE      shift, and go to state 4
    TRUE       shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    PRINT      shift, and go to state 10
    ID         shift, and go to state 13
    VAL        shift, and go to state 14
    '{'        shift, and go to state 15
    '}'        shift, and go to state 53
    '('        shift, and go to state 16

    stmt  go to state 54
    expr  go to state 20


State 29

    8 stmts: stmt .

    $default  reduce using rule 8 (stmts)


State 30

   23 expr: '(' expr . ')'
   24     | expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    AND  shift, and go to state 38
    OR   shift, and go to state 39
    XOR  shift, and go to state 40
    '>'  shift, and go to state 41
    '<'  shift, and go to state 42
    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46
    ')'  shift, and go to state 55


State 31

    6 decl: type ID . ';'

    ';'  shift, and go to state 56


State 32

   30 expr: expr GE . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 57


State 33

   31 expr: expr LE . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 58


State 34

   28 expr: expr EQ . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 59


State 35

   29 expr: expr NE . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 60


State 36

   15 stmt: expr INCREMENT . ';'

    ';'  shift, and go to state 61


State 37

   17 stmt: expr DECREMENT . ';'

    ';'  shift, and go to state 62


State 38

   34 expr: expr AND . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 63


State 39

   35 expr: expr OR . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 64


State 40

   36 expr: expr XOR . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 65


State 41

   32 expr: expr '>' . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 66


State 42

   33 expr: expr '<' . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 67


State 43

   24 expr: expr '+' . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 68


State 44

   25 expr: expr '-' . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 69


State 45

   26 expr: expr '*' . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 70


State 46

   27 expr: expr '/' . expr

    FALSE  shift, and go to state 4
    TRUE   shift, and go to state 5
    ID     shift, and go to state 21
    VAL    shift, and go to state 14
    '('    shift, and go to state 16

    expr  go to state 71


State 47

   14 stmt: INCREMENT expr ';' .

    $default  reduce using rule 14 (stmt)


State 48

   16 stmt: DECREMENT expr ';' .

    $default  reduce using rule 16 (stmt)


State 49

   11 stmt: IF '(' expr . ')' stmt
   12     | IF '(' expr . ')' stmt ELSE stmt
   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    AND  shift, and go to state 38
    OR   shift, and go to state 39
    XOR  shift, and go to state 40
    '>'  shift, and go to state 41
    '<'  shift, and go to state 42
    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46
    ')'  shift, and go to state 72


State 50

   13 stmt: WHILE '(' expr . ')' stmt
   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    AND  shift, and go to state 38
    OR   shift, and go to state 39
    XOR  shift, and go to state 40
    '>'  shift, and go to state 41
    '<'  shift, and go to state 42
    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46
    ')'  shift, and go to state 73


State 51

   18 stmt: PRINT expr ';' .

    $default  reduce using rule 18 (stmt)


State 52

   10 stmt: ID '=' expr . ';'
   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    AND  shift, and go to state 38
    OR   shift, and go to state 39
    XOR  shift, and go to state 40
    '>'  shift, and go to state 41
    '<'  shift, and go to state 42
    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46
    ';'  shift, and go to state 74


State 53

    9 stmt: '{' stmts '}' .

    $default  reduce using rule 9 (stmt)


State 54

    7 stmts: stmts stmt .

    $default  reduce using rule 7 (stmts)


State 55

   23 expr: '(' expr ')' .

    $default  reduce using rule 23 (expr)


State 56

    6 decl: type ID ';' .

    $default  reduce using rule 6 (decl)


State 57

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   30     | expr GE expr .
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 30 (expr)


State 58

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   31     | expr LE expr .
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 31 (expr)


State 59

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   28     | expr EQ expr .
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 28 (expr)


State 60

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   29     | expr NE expr .
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 29 (expr)


State 61

   15 stmt: expr INCREMENT ';' .

    $default  reduce using rule 15 (stmt)


State 62

   17 stmt: expr DECREMENT ';' .

    $default  reduce using rule 17 (stmt)


State 63

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   34     | expr AND expr .
   35     | expr . OR expr
   36     | expr . XOR expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    '>'  shift, and go to state 41
    '<'  shift, and go to state 42
    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 34 (expr)


State 64

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   35     | expr OR expr .
   36     | expr . XOR expr

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    '>'  shift, and go to state 41
    '<'  shift, and go to state 42
    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 35 (expr)


State 65

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr
   36     | expr XOR expr .

    GE   shift, and go to state 32
    LE   shift, and go to state 33
    EQ   shift, and go to state 34
    NE   shift, and go to state 35
    '>'  shift, and go to state 41
    '<'  shift, and go to state 42
    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 36 (expr)


State 66

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   32     | expr '>' expr .
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 32 (expr)


State 67

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   33     | expr '<' expr .
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 33 (expr)


State 68

   24 expr: expr . '+' expr
   24     | expr '+' expr .
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 24 (expr)


State 69

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   25     | expr '-' expr .
   26     | expr . '*' expr
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 25 (expr)


State 70

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   26     | expr '*' expr .
   27     | expr . '/' expr
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    $default  reduce using rule 26 (expr)


State 71

   24 expr: expr . '+' expr
   25     | expr . '-' expr
   26     | expr . '*' expr
   27     | expr . '/' expr
   27     | expr '/' expr .
   28     | expr . EQ expr
   29     | expr . NE expr
   30     | expr . GE expr
   31     | expr . LE expr
   32     | expr . '>' expr
   33     | expr . '<' expr
   34     | expr . AND expr
   35     | expr . OR expr
   36     | expr . XOR expr

    $default  reduce using rule 27 (expr)


State 72

   11 stmt: IF '(' expr ')' . stmt
   12     | IF '(' expr ')' . stmt ELSE stmt

    FALSE      shift, and go to state 4
    TRUE       shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    PRINT      shift, and go to state 10
    ID         shift, and go to state 13
    VAL        shift, and go to state 14
    '{'        shift, and go to state 15
    '('        shift, and go to state 16

    stmt  go to state 75
    expr  go to state 20


State 73

   13 stmt: WHILE '(' expr ')' . stmt

    FALSE      shift, and go to state 4
    TRUE       shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    PRINT      shift, and go to state 10
    ID         shift, and go to state 13
    VAL        shift, and go to state 14
    '{'        shift, and go to state 15
    '('        shift, and go to state 16

    stmt  go to state 76
    expr  go to state 20


State 74

   10 stmt: ID '=' expr ';' .

    $default  reduce using rule 10 (stmt)


State 75

   11 stmt: IF '(' expr ')' stmt .
   12     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 77

    $default  reduce using rule 11 (stmt)


State 76

   13 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 13 (stmt)


State 77

   12 stmt: IF '(' expr ')' stmt ELSE . stmt

    FALSE      shift, and go to state 4
    TRUE       shift, and go to state 5
    INCREMENT  shift, and go to state 6
    DECREMENT  shift, and go to state 7
    IF         shift, and go to state 8
    WHILE      shift, and go to state 9
    PRINT      shift, and go to state 10
    ID         shift, and go to state 13
    VAL        shift, and go to state 14
    '{'        shift, and go to state 15
    '('        shift, and go to state 16

    stmt  go to state 78
    expr  go to state 20


State 78

   12 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 12 (stmt)

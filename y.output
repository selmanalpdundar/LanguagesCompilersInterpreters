Grammar

    0 $accept: program $end

    1 program: decls stmt

    2 type: BOOL_TYPE
    3     | INT_TYPE

    4 decls: decls decl
    5      | /* empty */

    6 decl: type ID ';'

    7 stmts: stmts stmt
    8      | stmt

    9 stmt: '{' stmts '}'
   10     | ID '=' expr ';'
   11     | IF '(' expr ')' stmt
   12     | IF '(' expr ')' stmt ELSE stmt
   13     | WHILE '(' expr ')' stmt
   14     | PRINT expr ';'

   15 expr: VAL
   16     | FALSE
   17     | TRUE
   18     | ID
   19     | '(' expr ')'
   20     | expr '+' expr
   21     | expr '-' expr
   22     | expr '*' expr
   23     | expr '/' expr
   24     | expr EQ expr
   25     | expr NE expr
   26     | expr GE expr
   27     | expr LE expr
   28     | expr '>' expr
   29     | expr '<' expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 11 12 13 19
')' (41) 11 12 13 19
'*' (42) 22
'+' (43) 20
'-' (45) 21
'/' (47) 23
';' (59) 6 10 14
'<' (60) 29
'=' (61) 10
'>' (62) 28
'{' (123) 9
'}' (125) 9
error (256)
GE (258) 26
LE (259) 27
EQ (260) 24
NE (261) 25
FALSE (262) 16
TRUE (263) 17
IF (264) 11 12
ELSE (265) 12
WHILE (266) 13
PRINT (267) 14
BOOL_TYPE (268) 2
INT_TYPE (269) 3
ID (270) 6 10 18
VAL (271) 15
IF_ALONE (272)


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
program (31)
    on left: 1, on right: 0
type (32)
    on left: 2 3, on right: 6
decls (33)
    on left: 4 5, on right: 1 4
decl (34)
    on left: 6, on right: 4
stmts (35)
    on left: 7 8, on right: 7 9
stmt (36)
    on left: 9 10 11 12 13 14, on right: 1 7 8 11 12 13
expr (37)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29,
    on right: 10 11 12 13 14 19 20 21 22 23 24 25 26 27 28 29


state 0

    0 $accept: . program $end

    $default  reduce using rule 5 (decls)

    program  go to state 1
    decls    go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: decls . stmt
    4 decls: decls . decl

    IF         shift, and go to state 4
    WHILE      shift, and go to state 5
    PRINT      shift, and go to state 6
    BOOL_TYPE  shift, and go to state 7
    INT_TYPE   shift, and go to state 8
    ID         shift, and go to state 9
    '{'        shift, and go to state 10

    type  go to state 11
    decl  go to state 12
    stmt  go to state 13


state 3

    0 $accept: program $end .

    $default  accept


state 4

   11 stmt: IF . '(' expr ')' stmt
   12     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 14


state 5

   13 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 15


state 6

   14 stmt: PRINT . expr ';'

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 21


state 7

    2 type: BOOL_TYPE .

    $default  reduce using rule 2 (type)


state 8

    3 type: INT_TYPE .

    $default  reduce using rule 3 (type)


state 9

   10 stmt: ID . '=' expr ';'

    '='  shift, and go to state 22


state 10

    9 stmt: '{' . stmts '}'

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    PRINT  shift, and go to state 6
    ID     shift, and go to state 9
    '{'    shift, and go to state 10

    stmts  go to state 23
    stmt   go to state 24


state 11

    6 decl: type . ID ';'

    ID  shift, and go to state 25


state 12

    4 decls: decls decl .

    $default  reduce using rule 4 (decls)


state 13

    1 program: decls stmt .

    $default  reduce using rule 1 (program)


state 14

   11 stmt: IF '(' . expr ')' stmt
   12     | IF '(' . expr ')' stmt ELSE stmt

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 26


state 15

   13 stmt: WHILE '(' . expr ')' stmt

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 27


state 16

   16 expr: FALSE .

    $default  reduce using rule 16 (expr)


state 17

   17 expr: TRUE .

    $default  reduce using rule 17 (expr)


state 18

   18 expr: ID .

    $default  reduce using rule 18 (expr)


state 19

   15 expr: VAL .

    $default  reduce using rule 15 (expr)


state 20

   19 expr: '(' . expr ')'

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 28


state 21

   14 stmt: PRINT expr . ';'
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . EQ expr
   25     | expr . NE expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . '>' expr
   29     | expr . '<' expr

    GE   shift, and go to state 29
    LE   shift, and go to state 30
    EQ   shift, and go to state 31
    NE   shift, and go to state 32
    '>'  shift, and go to state 33
    '<'  shift, and go to state 34
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    ';'  shift, and go to state 39


state 22

   10 stmt: ID '=' . expr ';'

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 40


state 23

    7 stmts: stmts . stmt
    9 stmt: '{' stmts . '}'

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    PRINT  shift, and go to state 6
    ID     shift, and go to state 9
    '{'    shift, and go to state 10
    '}'    shift, and go to state 41

    stmt  go to state 42


state 24

    8 stmts: stmt .

    $default  reduce using rule 8 (stmts)


state 25

    6 decl: type ID . ';'

    ';'  shift, and go to state 43


state 26

   11 stmt: IF '(' expr . ')' stmt
   12     | IF '(' expr . ')' stmt ELSE stmt
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . EQ expr
   25     | expr . NE expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . '>' expr
   29     | expr . '<' expr

    GE   shift, and go to state 29
    LE   shift, and go to state 30
    EQ   shift, and go to state 31
    NE   shift, and go to state 32
    '>'  shift, and go to state 33
    '<'  shift, and go to state 34
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    ')'  shift, and go to state 44


state 27

   13 stmt: WHILE '(' expr . ')' stmt
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . EQ expr
   25     | expr . NE expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . '>' expr
   29     | expr . '<' expr

    GE   shift, and go to state 29
    LE   shift, and go to state 30
    EQ   shift, and go to state 31
    NE   shift, and go to state 32
    '>'  shift, and go to state 33
    '<'  shift, and go to state 34
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    ')'  shift, and go to state 45


state 28

   19 expr: '(' expr . ')'
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . EQ expr
   25     | expr . NE expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . '>' expr
   29     | expr . '<' expr

    GE   shift, and go to state 29
    LE   shift, and go to state 30
    EQ   shift, and go to state 31
    NE   shift, and go to state 32
    '>'  shift, and go to state 33
    '<'  shift, and go to state 34
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    ')'  shift, and go to state 46


state 29

   26 expr: expr GE . expr

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 47


state 30

   27 expr: expr LE . expr

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 48


state 31

   24 expr: expr EQ . expr

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 49


state 32

   25 expr: expr NE . expr

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 50


state 33

   28 expr: expr '>' . expr

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 51


state 34

   29 expr: expr '<' . expr

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 52


state 35

   20 expr: expr '+' . expr

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 53


state 36

   21 expr: expr '-' . expr

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 54


state 37

   22 expr: expr '*' . expr

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 55


state 38

   23 expr: expr '/' . expr

    FALSE  shift, and go to state 16
    TRUE   shift, and go to state 17
    ID     shift, and go to state 18
    VAL    shift, and go to state 19
    '('    shift, and go to state 20

    expr  go to state 56


state 39

   14 stmt: PRINT expr ';' .

    $default  reduce using rule 14 (stmt)


state 40

   10 stmt: ID '=' expr . ';'
   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . EQ expr
   25     | expr . NE expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . '>' expr
   29     | expr . '<' expr

    GE   shift, and go to state 29
    LE   shift, and go to state 30
    EQ   shift, and go to state 31
    NE   shift, and go to state 32
    '>'  shift, and go to state 33
    '<'  shift, and go to state 34
    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38
    ';'  shift, and go to state 57


state 41

    9 stmt: '{' stmts '}' .

    $default  reduce using rule 9 (stmt)


state 42

    7 stmts: stmts stmt .

    $default  reduce using rule 7 (stmts)


state 43

    6 decl: type ID ';' .

    $default  reduce using rule 6 (decl)


state 44

   11 stmt: IF '(' expr ')' . stmt
   12     | IF '(' expr ')' . stmt ELSE stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    PRINT  shift, and go to state 6
    ID     shift, and go to state 9
    '{'    shift, and go to state 10

    stmt  go to state 58


state 45

   13 stmt: WHILE '(' expr ')' . stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    PRINT  shift, and go to state 6
    ID     shift, and go to state 9
    '{'    shift, and go to state 10

    stmt  go to state 59


state 46

   19 expr: '(' expr ')' .

    $default  reduce using rule 19 (expr)


state 47

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . EQ expr
   25     | expr . NE expr
   26     | expr . GE expr
   26     | expr GE expr .
   27     | expr . LE expr
   28     | expr . '>' expr
   29     | expr . '<' expr

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 26 (expr)


state 48

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . EQ expr
   25     | expr . NE expr
   26     | expr . GE expr
   27     | expr . LE expr
   27     | expr LE expr .
   28     | expr . '>' expr
   29     | expr . '<' expr

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 27 (expr)


state 49

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . EQ expr
   24     | expr EQ expr .
   25     | expr . NE expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . '>' expr
   29     | expr . '<' expr

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 24 (expr)


state 50

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . EQ expr
   25     | expr . NE expr
   25     | expr NE expr .
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . '>' expr
   29     | expr . '<' expr

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 25 (expr)


state 51

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . EQ expr
   25     | expr . NE expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . '>' expr
   28     | expr '>' expr .
   29     | expr . '<' expr

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 28 (expr)


state 52

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . EQ expr
   25     | expr . NE expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . '>' expr
   29     | expr . '<' expr
   29     | expr '<' expr .

    '+'  shift, and go to state 35
    '-'  shift, and go to state 36
    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 29 (expr)


state 53

   20 expr: expr . '+' expr
   20     | expr '+' expr .
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . EQ expr
   25     | expr . NE expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . '>' expr
   29     | expr . '<' expr

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 20 (expr)


state 54

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   21     | expr '-' expr .
   22     | expr . '*' expr
   23     | expr . '/' expr
   24     | expr . EQ expr
   25     | expr . NE expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . '>' expr
   29     | expr . '<' expr

    '*'  shift, and go to state 37
    '/'  shift, and go to state 38

    $default  reduce using rule 21 (expr)


state 55

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   22     | expr '*' expr .
   23     | expr . '/' expr
   24     | expr . EQ expr
   25     | expr . NE expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . '>' expr
   29     | expr . '<' expr

    $default  reduce using rule 22 (expr)


state 56

   20 expr: expr . '+' expr
   21     | expr . '-' expr
   22     | expr . '*' expr
   23     | expr . '/' expr
   23     | expr '/' expr .
   24     | expr . EQ expr
   25     | expr . NE expr
   26     | expr . GE expr
   27     | expr . LE expr
   28     | expr . '>' expr
   29     | expr . '<' expr

    $default  reduce using rule 23 (expr)


state 57

   10 stmt: ID '=' expr ';' .

    $default  reduce using rule 10 (stmt)


state 58

   11 stmt: IF '(' expr ')' stmt .
   12     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 60

    $default  reduce using rule 11 (stmt)


state 59

   13 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 13 (stmt)


state 60

   12 stmt: IF '(' expr ')' stmt ELSE . stmt

    IF     shift, and go to state 4
    WHILE  shift, and go to state 5
    PRINT  shift, and go to state 6
    ID     shift, and go to state 9
    '{'    shift, and go to state 10

    stmt  go to state 61


state 61

   12 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 12 (stmt)
